name: Build JPY distributions

on:
  pull_request:
    branches: [ 'master' ]
  push:
    branches: [ 'master', 'release/v*' ]

jobs:
  jars:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - run: mvn jar:jar javadoc:jar source:jar-no-fork
      - uses: actions/upload-artifact@v3
        with:
          name: jars
          path: target

  sdist:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      # TODO: sdist shouldn't need java
      - uses: actions/setup-java@v3
        id: setup-java
        with:
          distribution: 'temurin'
          java-version: '8'
      - run: python setup.py sdist
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist

  bdist-wheel:
    runs-on: ${{ matrix.info.machine }}
    strategy:
      fail-fast: false
      matrix:
        info:
          - { machine: 'ubuntu-20.04', python: '3.7',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/Linux/bdist-wheel.sh' }
          - { machine: 'ubuntu-20.04', python: '3.8',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/Linux/bdist-wheel.sh' }
          - { machine: 'ubuntu-20.04', python: '3.9',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/Linux/bdist-wheel.sh' }
          - { machine: 'ubuntu-20.04', python: '3.10', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/Linux/bdist-wheel.sh' }
          - { machine: 'windows-2022', python: '3.7',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.\.github\env\Windows\bdist-wheel.ps1' }
          - { machine: 'windows-2022', python: '3.8',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.\.github\env\Windows\bdist-wheel.ps1' }
          - { machine: 'windows-2022', python: '3.9',  pythonArchitecture: 'x64', arch: 'amd64', cmd: '.\.github\env\Windows\bdist-wheel.ps1' }
          - { machine: 'windows-2022', python: '3.10', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.\.github\env\Windows\bdist-wheel.ps1' }
          - { machine: 'macos-11', python: '3.7', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/macOS/bdist-wheel.sh' }
          - { machine: 'macos-11', python: '3.8', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/macOS/bdist-wheel.sh' }
          - { machine: 'macos-11', python: '3.9', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/macOS/bdist-wheel.sh' }
          - { machine: 'macos-11', python: '3.10', pythonArchitecture: 'x64', arch: 'amd64', cmd: '.github/env/macOS/bdist-wheel.sh' }

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.info.python }}
          architecture: ${{ matrix.info.pythonArchitecture }}

      - uses: actions/setup-java@v3
        id: setup-java
        with:
          distribution: 'temurin'
          java-version: '8'

      - run: ${{ matrix.info.cmd }}

      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.info.python }}-${{ matrix.info.machine }}-${{ matrix.info.arch }}
          path: dist/*.whl
          retention-days: 1

  collect-artifacts:
    runs-on: 'ubuntu-20.04'
    needs: ['sdist', 'bdist-wheel']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: download-artifacts
      - name: collect-artifacts.sh
        run: .github/scripts/collect-artifacts.sh
      - uses: actions/upload-artifact@v2
        with:
          name: jpy
          path: collect-artifacts

  release-artifacts:
    if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}
    runs-on: 'ubuntu-20.04'
    needs: ['collect-artifacts']
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: jpy
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
